cookie - parser
cors

right way to install packages is through terminal, not by 
1. writing first in package.json, and then installing them

# * means we are allowing all ports to access server
# we can do this task by proxy also

//mainly informational response (100-199)
//successfull res (200-299)
//redirection mess(300-399);
//client error (400-499)
//server error (500-599)


//Node.js have class for Error , you can inherit it and make your own Error class, and whenever some error occurs, you will send it through this only,
// this class has constructor that take parameters like statusCode,message,errors Array, and statck


//direct encryption with the help of bscript and jwt is not possible
// we use hooks provided by mongoose here like Pre hook

//what to research
plugins
middlewares
async await and promise
multer
file in multer
cb in it
thunderclient
scrapper
cloudinary
ways other than post in use.routes
//_id of bson data
scope issues
 

#print
//response , cloudinary
//req.files
//req.body


cloudinary
//cloudinary is mostly used to put images,files etc 
//it is nothing but wrapper on aws, but with many facilities that they provide
//we can use it as a middleware or utility depends on usecases
// In our case we will make a utility of it

Steps
//install it
//import it
//configure it
//use method to upload file


#How to debug
%check for password in the secret key
%check for .js in importing statements
%check for export default(can be named anything while importing) export {} type thing


//entering the required fields like
firstname,surname,email,password
//validation(empty,correct format)
//check if user already exists: username, email
//check for images, check for avatar


//putting them in db


//controllers
while talking with db you might get error(handled by asynchandler), and it lies in another continent => you need to write await here



//we can do work only with access token but in nowadays, both refresh and access tokens are in use

//access token 
short lived
required whenever some work needed authentication

//refresh token
long lived 
if refresh token stored in browser and in the databases are same, then this refresh token can allot new access token to the user, can continue the work(without logging again)

//cookie cannot be set in mobile application

//accessToken refreshToken and how to make 